swagger: '2.0'
info:
  version: '1.0'
  title: Todo
  description: App used to keep track of items
basePath: /v1
schemes:
  - http
consumes:
  - application/json
  - application/JSON
produces:
  - application/json
  - application/JSON

tags:
  - name: Item
paths:
  /health:
    get:
      responses:
        '200':
          description: 'returns the health of a server'
          schema:
            type: string
  /item:
    get:
      summary: Get all todo items
      description: Gets all todo items in database
      operationId: getAll
      tags:
        - Item
      responses:
        '200':
          description: 'Found all items'
          schema:
            type: array
            items:
              $ref: '#/definitions/item'
        '500':
          description: 'internal error'
          schema:
            $ref: '#/definitions/errorResponse'
    post:
      summary: Create todo item
      operationId: create
      tags:
        - Item
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/itemInput'
      responses:
        '201':
          description: Created todo item
          schema:
            $ref: '#/definitions/item'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/errorResponse'
        '500':
          description: Internal Error
          schema:
            $ref: '#/definitions/errorResponse'
    put:
      summary: Update todo item
      operationId: update
      tags:
        - Item
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/itemInput'
      responses:
        '200':
          description: Updated todo item
          schema:
            $ref: '#/definitions/item'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/errorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse'
        '500':
          description: Internal Error
          schema:
            $ref: '#/definitions/errorResponse'

  /item/{id}:
    get:
      summary: Get todo item
      description: Gets todo item by ID provided
      operationId: get
      tags:
        - Item
      parameters:
        - type : integer
          format: int64
          name: id
          in: path
          required: true
      responses:
        '200':
          description: 'Found todo item by ID'
          schema:
            $ref: '#/definitions/item'
        '404':
          description: 'Not Found'
          schema:
            $ref: '#/definitions/errorResponse'
        '500':
          description: "Internal Error"
          schema:
            $ref: '#/definitions/errorResponse'
    delete:
      summary: Delete todo item
      description: Deletes todo item by ID
      operationId: delete
      tags:
        - Item
      parameters:
        - type: integer
          format: int64
          name: id
          in: path
          required: true
      responses:
        '204':
          description: "OK"
          schema:
            $ref: '#/definitions/errorResponse'
        '404':
          description: "Not Found"
          schema:
            $ref: '#/definitions/errorResponse'
        '500':
          description: "Internal Error"
          schema:
            $ref: '#/definitions/errorResponse'


definitions:
  errorResponse:
    title: Error Response
    type: object
    x-go-type:
      import:
        package: 'github.com/SAKA-club/todo/backend/errs'
        alias: 'errs'
      type: 'TodoError'
    properties:
      code:
        type: integer
      message:
        type: string


  item:
    type: object
    required:
      - id
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      body:
        type: string
      priority:
        type: boolean
      schedule_time:
        type: string
        format: date-time
        description: RFC3339 Datetime to set
        example: "2021-06-20T01:02:03+00:00"
        x-go-custom-tag: db:"schedule_time,omitempty"
        x-omitempty: true
      complete_time:
        type: string
        format: date-time
        description: RFC3339 Datetime to set
        example: "2021-06-20T01:02:03+00:00"
        x-go-custom-tag: db:"complete_time,omitempty"
        x-omitempty: true

  itemInput:
    type: object
    required:
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      body:
        type: string
      priority:
        type: boolean
      schedule_time:
        type: string
        format: date
        description: RFC3339 Datetime to set
        example: "2021-06-20T01:02:03+00:00"
        x-go-custom-tag: db:"complete_time,omitempty"
        x-omitempty: true
      complete_time:
        type: string
        format: date-time
        description: RFC3339 Datetime to set
        example: "2021-06-20T01:02:03+00:00"
        x-go-custom-tag: db:"complete_time,omitempty"
        x-omitempty: true

